@model SRCONFI.Projeto.Domain.Entity.Livros

@{
    Layout = null;
    SRCONFI.Projeto.Domain.Entity.Estoque Estoque = (ViewBag.Estoque == null) ? new SRCONFI.Projeto.Domain.Entity.Estoque() : (SRCONFI.Projeto.Domain.Entity.Estoque)ViewBag.Estoque;
}



<script src="~/Scripts/Views/EntradasLivros/_Livro.js"></script>

@Html.HiddenFor(model => model.livroID)

@*<form id="formLivroPesquisar">*@
    <div class="top10 left10 right10">
        <div class="row top5">
            <div class="col-xs-2">
                @Html.Label("Código", new { @class = "col-sm-2 control-label-sm" })
                @Html.TextBoxFor(model => model.livroID, new { @class = "form-control input-sm", @readonly = "readonly", @data_parsley_required = "", @data_parsley_error_message = "O campo 'Data Venda' é obrigatório" })
            </div>
            <div class="col-xs-1">
                @*@Html.Label("Pesquisar", new { @class = "col-sm-2 control-label-sm" })*@
                <div class="btn-group pull-right" style="margin-top:23px">
                    <button type="button" class="btn btn-primary" id="btnSearchLivro">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>

        <div class="row top5">
            <div class="col-xs-12">
                @Html.Label("Título", new { @class = "col-sm-2 control-label-sm" })
                @Html.TextBoxFor(model => model.nomeAutor, new { @class = "form-control input-sm", @readonly = "readonly" })
            </div>
        </div>

        <div class="row top5">
            <div class="col-xs-12">
                @Html.Label("Autor", new { @class = "col-sm-2 control-label-sm" })
                @Html.TextBoxFor(model => model.Autores.nomeAutor, new { @class = "form-control input-sm", @readonly = "readonly" })
            </div>
        </div>

        <div class="row top5">
            <div class="col-xs-12">
                @Html.Label("Editora", new { @class = "col-sm-2 control-label-sm" })
                @Html.TextBoxFor(model => model.Editoras.nomeEditora, new { @class = "form-control input-sm", @readonly = "readonly" })
            </div>
        </div>


        <div class="row top5">
            <div class="col-xs-6">
                @Html.Label("Qntd. Estoque", new { @class = "col-sm-6 control-label-sm" })
                @Html.TextBox("txtQuantidadeEstoque", Estoque.nrQuantidade, new { @class = "form-control input-sm", @readonly = "readonly" })
            </div>
            <div class="col-xs-6">
                @Html.Label("Vlr. Unitário", new { @class = "col-sm-6 control-label-sm" })
                @Html.TextBox("txtValorUnitario", Estoque.vlUnitarioLivro, new { @class = "form-control input-sm", @readonly = "readonly" })
            </div>
            @Html.Hidden("Estoque_estoqueID", Estoque.estoqueID)
            @Html.Hidden("Estoque_entradaID_FK", Estoque.entradaID_FK)
        </div>


    </div>
@*</form>*@